//리팩토링 => 결과물은 같으나 코드만 달라지는 경우
body {
  height: 100vh;
  background-image: url("#{$url}/bg.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  background-attachment: fixed;
}
/* 100vh 보이는 뷰포트의 넓이의 100%, 즉 보이는 뷰포트 크기 그 자체의 너비 */
/* size에서 cover는 더 넓은 너비에 비율을 맞춰서 만들겠다는 것. no-repeat은 화면 가로 너비를 줄이고 wrap된 만큼 스크롤을 해도 배경이 반복돼서 나타나지 않겠다고 하는 것  */
/* 마지막 fixed는 보이는 배경화면이 스크롤해도 고정돼서 나타나도록 하는 것. 스크롤해서 100vh보다 더 밑으로 내려간다 해도 빈 화면이 나타나지 않고 고정된 배경화면으로 볼 수 있는 것 */

.container {
  padding: 50px 0;
  .heroes {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    max-width: 700px;
    margin: 0 auto;
    padding: 40px 20px;
    .hero {
      width: 80px;
      height: 84px;
      background-color: #555;
      margin: 4px;
      border: 3px solid #fff;
      border-radius: 10px;
      box-sizing: border-box;
      overflow: hidden;
      transform: skewX(-14deg);
      transition: transform 0.1s, background-color 0.6s;
      &:hover {
        background-color: #ff9c00;
        transform: skewX(-14deg) scale(1.3);
        z-index: 1;
      }
      .image {
        width: 140%;
        height: 100%;
        background-position: center;
        background-size: 90px;
        background-repeat: no-repeat;
        transform: skewX(14deg) translateX(-16px);
        /* margin에 auto값을 주기 위해서는 반드시 block요소여야 하고 width값이 있어야 한다. 위 아래에는 auto 넣을 필요 없이 브라우저에서 잘 넣어달라는 의미에 0을 넣는다*/
        /* 이미 부모 요소에서 skewX가 있어서 이미지도 기울어짐. 이미지는 정상적인 화면으로 연출하기 위해 반대로 14deg를 부여함 */
      }

      @for $i from 1 through 32 {
        // .hero
        &:nth-child(#{$i}) .image {
          background-image: url("#{$url}/hero#{$i}.png");
        }
      }
    }
  }
  .logo {
    max-width: 300px;
    margin: 0 auto;
    padding: 0 20px;
    img {
      width: 100%;
    }
  }
}
